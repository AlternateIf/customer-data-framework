parameters:
    cmf.mailchimp.client.apikey:

services:

    cmf.logger:
        alias: logger

    cmf.view_formatter:
        class: CustomerManagementFrameworkBundle\View\Formatter\DefaultViewFormatter
        lazy: true

    cmf.activity_view:
        class: CustomerManagementFrameworkBundle\ActivityView\DefaultActivityView
        lazy: true
        arguments: ['@cmf.view_formatter']

    cmf.activity_store:
        class: CustomerManagementFrameworkBundle\ActivityStore\MariaDb
        lazy: true

    cmf.activity_manager:
        class: CustomerManagementFrameworkBundle\ActivityManager\DefaultActivityManager
        lazy: true

    cmf.activity_store_entry:
        class: CustomerManagementFrameworkBundle\Model\ActivityStoreEntry\DefaultActivityStoreEntry
        lazy: true
        shared: false

    cmf.activity_url_tracker:
        class: CustomerManagementFrameworkBundle\ActivityUrlTracker\DefaultActivityUrlTracker
        lazy: true
        calls:
            - [setLogger, ['@cmf.logger']]

    cmf.customer_save_manager:
        class: CustomerManagementFrameworkBundle\CustomerSaveManager\DefaultCustomerSaveManager
        lazy: true

    cmf.customer_save_validator:
        class: CustomerManagementFrameworkBundle\CustomerSaveValidator\DefaultCustomerSaveValidator
        lazy: true

    cmf.segment_manager:
        class: CustomerManagementFrameworkBundle\SegmentManager\DefaultSegmentManager
        lazy: true
        calls:
            - [setLogger, ['@cmf.logger']]

    cmf.segment_manager.segment_merger:
        class: CustomerManagementFrameworkBundle\SegmentManager\SegmentMerger\DefaultSegmentMerger
        lazy: true
        calls:
             - [setLogger, ['@cmf.logger']]

    cmf.customer_duplicates_service:
        class: CustomerManagementFrameworkBundle\CustomerDuplicatesService\DefaultCustomerDuplicatesService
        lazy: true

    cmf.customer_duplicates_view:
        class: CustomerManagementFrameworkBundle\CustomerDuplicatesView\DefaultCustomerDuplicatesView
        lazy: true
        arguments: ['@cmf.view_formatter']


    cmf.customer_duplicates_index:
        class: CustomerManagementFrameworkBundle\DuplicatesIndex\DefaultMariaDbDuplicatesIndex
        lazy: true
        calls:
            - [setLogger, ['@cmf.logger']]

    cmf.customer_view:
        class: CustomerManagementFrameworkBundle\CustomerView\DefaultCustomerView
        lazy: true
        arguments: ['@cmf.view_formatter']

    cmf.customer_export_manager:
        class: CustomerManagementFrameworkBundle\CustomerList\ExporterManager

    cmf.potential_duplicate_item:
        class: CustomerManagementFrameworkBundle\Model\CustomerDuplicates\PotentialDuplicateItem
        lazy: true
        shared: false

    cmf.customer_merger:
            class: CustomerManagementFrameworkBundle\CustomerMerger\DefaultCustomerMerger
            lazy: true
            calls:
                - [setLogger, ['@cmf.logger']]

    cmf.customer_provider:
         class: CustomerManagementFrameworkBundle\CustomerProvider\DefaultCustomerProvider
         lazy: true

    cmf.customer_exporter_manager:
         class: CustomerManagementFrameworkBundle\CustomerList\ExporterManager
         lazy: true

    cmf.customer_provider.object_naming_scheme:
         class: CustomerManagementFrameworkBundle\CustomerProvider\ObjectNamingScheme\DefaultObjectNamingScheme
         lazy: true

    cmf.action_trigger.queue:
        class: CustomerManagementFrameworkBundle\ActionTrigger\Queue\DefaultQueue
        lazy: true
        calls:
            - [setLogger, ['@cmf.logger']]

    cmf.action_trigger.action_manager:
        class: CustomerManagementFrameworkBundle\ActionTrigger\ActionManager\DefaultActionManager
        lazy: true
        calls:
            - [setLogger, ['@cmf.logger']]

    cmf.rest.activities_handler:
        class: CustomerManagementFrameworkBundle\RESTApi\ActivitiesHandler
        lazy: true
        calls:
            - [setApiResourceRoute, ['customermanagementframework_rest_api_activities_readrecord']]
            - [setLogger, ['@cmf.logger']]

    cmf.rest.customers_handler:
        class: CustomerManagementFrameworkBundle\RESTApi\CustomersHandler
        lazy: true
        arguments: ['@cmf.customer_provider']
        calls:
            - [setApiResourceRoute, ['customermanagementframework_rest_api_customers_readrecord']]
            - [setLogger, ['@cmf.logger']]

    cmf.rest.segments_of_customer_handler:
        class: CustomerManagementFrameworkBundle\RESTApi\SegmentsOfCustomerHandler
        lazy: true
        calls:
            - [setLogger, ['@cmf.logger']]

    cmf.rest.segments_handler:
        class: CustomerManagementFrameworkBundle\RESTApi\SegmentsHandler
        lazy: true
        calls:
            - [setApiResourceRoute, ['customermanagementframework_rest_api_segments_readrecord']]
            - [setLogger, ['@cmf.logger']]

    cmf.rest.segment_groups_handler:
            class: CustomerManagementFrameworkBundle\RESTApi\SegmentGroupsHandler
            lazy: true
            calls:
                - [setApiResourceRoute, ['customermanagementframework_rest_api_segmentgroups_readrecord']]
                - [setLogger, ['@cmf.logger']]

    cmf.rest.deletions_handler:
        class: CustomerManagementFrameworkBundle\RESTApi\DeletionsHandler
        lazy: true
        calls:
            - [setLogger, ['@cmf.logger']]

    # The user provider loads users by Username.
    # Pimcore provides a simple ObjectUserProvider which is able to load users from a specified class by a configured
    # field. The website_demo.security.user_provider will load users from the AppBundle\Model\Object\User by looking at
    # their username field.
    cmf.authentication.user_provider:
        class: CustomerManagementFrameworkBundle\Authentication\UserProvider\CustomerObjectUserProvider
        arguments:
            - '@cmf.customer_provider'
            - 'email'

    # The encoder factory is responsible for verifying the password hash for a given user. As we need some special
    # handling to be able to work with the password field, we use the UserAwareEncoderFactory to buiild a dedicated
    # encoder per user. This service is configured in pimcore.security.encoder_factories to handle our user model.
    cmf.authentication.user_password_encoder_factory:
        class: Pimcore\Security\Encoder\Factory\UserAwareEncoderFactory
        arguments:
            - Pimcore\Security\Encoder\PasswordFieldEncoder
            - ['password']

    cmf.authentication.sso.identity_service:
        class: CustomerManagementFrameworkBundle\Authentication\SsoIdentity\DefaultSsoIdentityService
        arguments: ['@cmf.customer_provider']
        calls:
             - [setLogger, ['@cmf.logger']]

    cmf.authentication.sso.hybrid_auth_handler:
        class: CustomerManagementFrameworkBundle\Authentication\Sso\DefaultHybridAuthHandler
        arguments: ['@cmf.authentication.sso.identity_service', '@cmf.encryption_service']

    cmf.encryption_service:
        class: CustomerManagementFrameworkBundle\Encryption\DefaultEncryptionService
        calls:
             - [setLogger, ['@cmf.logger']]

    cmf.mailchimp.client:
        class: DrewM\MailChimp\MailChimp
        lazy: true
        arguments: ['%cmf.mailchimp.client.apikey%']

    cmf.mailchimp.export_service:
        class: CustomerManagementFrameworkBundle\ExportToolkit\ExportService\MailChimpExportService
        lazy: true
        arguments: ['@cmf.mailchimp.client']
